name: Deploy to AIQBrain Staging

on:
  push:
    branches:
      - develop  # Trigger on pushes to 'develop' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: AIQBrain Staging
      url: https://staging.aiqbrain.com  # Adds "View Deployment" button in GitHub UI

    steps:
      # --- Step 1: Checkout & Setup ---
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"  # Cache dependencies for faster runs

      # --- Step 2: Install & Build ---
      - name: Install dependencies
        run: npm ci --prefer-offline  # Uses cached modules if available

      - name: Run linting
        run: npm run lint  # Fail early if linting fails

      - name: Build project
        run: npm run build

      # --- Step 3: AI Code Review (Optional) ---
      - name: DeepSeek AI Code Review
        if: ${{ github.event_name == 'pull_request' }}  # Only run on PRs (optional)
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        run: |
          echo "ðŸ“Š Running AI-powered code analysis..."
          # Example: Use curl to call DeepSeek API (replace with actual API logic)
          # (This is a placeholder; adapt to DeepSeek's API when available)
          curl -X POST https://api.deepseek.com/v1/review \
            -H "Authorization: Bearer $DEEPSEEK_API_KEY" \
            -d '{"code": "'"$(git diff --cached)"'"}'

      # --- Step 4: Deploy to Cloudflare ---
      - name: Deploy to Cloudflare Workers (Staging)
        run: npx wrangler deploy --env staging
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Add other env vars needed for your deployment

      # --- Step 5: Post-Deployment Checks ---
      - name: Verify deployment
        run: |
          echo "âœ… Successfully deployed to Staging!"
          echo "URL: https://staging.aiqbrain.com"

      # --- Optional: Slack/Teams Notification ---
      - name: Notify Slack
        if: success()  # Only notify on success
        uses: slackapi/slack-github-action@v1
        with:
          slack-message: "ðŸš€ Staging Deployment Successful!\nBranch: ${{ github.ref }}\nURL: https://staging.aiqbrain.com"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
